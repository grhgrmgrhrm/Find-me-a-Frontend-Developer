{"ast":null,"code":"import _defineProperty from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/src/App.js\";\nimport React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from \"./svg/logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n    _this.handleAnswerSelected = _this.handleAnswerSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var shuffledAnswerOptions = quizQuestions.map(function (question) {\n        return _this2.shuffleArray(question.answers);\n      });\n      this.setState({\n        question: quizQuestions[0].question,\n        answerOptions: shuffledAnswerOptions[0]\n      });\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n  }, {\n    key: \"handleAnswerSelected\",\n    value: function handleAnswerSelected(event) {\n      var _this3 = this;\n\n      this.setUserAnswer(event.currentTarget.value);\n\n      if (this.state.questionId < quizQuestions.length) {\n        setTimeout(function () {\n          return _this3.setNextQuestion();\n        }, 300);\n      } else {\n        setTimeout(function () {\n          return _this3.setResults(_this3.getResults());\n        }, 300);\n      }\n    }\n  }, {\n    key: \"setUserAnswer\",\n    value: function setUserAnswer(answer) {\n      this.setState(function (state, props) {\n        return {\n          answersCount: _objectSpread({}, state.answersCount, _defineProperty({}, answer, (state.answersCount[answer] || 0) + 1)),\n          answer: answer\n        };\n      });\n    }\n  }, {\n    key: \"setNextQuestion\",\n    value: function setNextQuestion() {\n      var counter = this.state.counter + 1;\n      var questionId = this.state.questionId + 1;\n      this.setState({\n        counter: counter,\n        questionId: questionId,\n        question: quizQuestions[counter].question,\n        answerOptions: quizQuestions[counter].answers,\n        answer: ''\n      });\n    }\n  }, {\n    key: \"getResults\",\n    value: function getResults() {\n      var answersCount = this.state.answersCount;\n      var answersCountKeys = Object.keys(answersCount);\n      var answersCountValues = answersCountKeys.map(function (key) {\n        return answersCount[key];\n      });\n      var maxAnswerCount = Math.max.apply(null, answersCountValues);\n      return answersCountKeys.filter(function (key) {\n        return answersCount[key] === maxAnswerCount;\n      });\n    }\n  }, {\n    key: \"setResults\",\n    value: function setResults(result) {\n      if (result.length === 1) {\n        this.setState({\n          result: result[0]\n        });\n      } else {\n        this.setState({\n          result: 'На основе ваших ответов мы не смогли подыскать кандидатов с релевантным опытом работы. Попробуйте еще раз!'\n        });\n      }\n    }\n  }, {\n    key: \"renderQuiz\",\n    value: function renderQuiz() {\n      return React.createElement(Quiz, {\n        answer: this.state.answer,\n        answerOptions: this.state.answerOptions,\n        questionId: this.state.questionId,\n        question: this.state.question,\n        questionTotal: quizQuestions.length,\n        onAnswerSelected: this.handleAnswerSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderResult\",\n    value: function renderResult() {\n      return React.createElement(Result, {\n        quizResult: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0439\\u0434\\u0438 \\u0441\\u0435\\u0431\\u0435 \\u0432 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0443 Frontend-\\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\u0430\")), this.state.result ? this.renderResult() : this.renderQuiz());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/grhgrmgrhrm/git-project/Find-me-a-Frontend-Developer/src/App.js"],"names":["React","Component","quizQuestions","Quiz","Result","App","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","handleAnswerSelected","bind","shuffledAnswerOptions","map","shuffleArray","answers","setState","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","event","setUserAnswer","currentTarget","value","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","answersCountValues","key","maxAnswerCount","max","apply","filter","logo","renderResult","renderQuiz"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question =>\n      this.shuffleArray(question.answers)\n    );\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: 'На основе ваших ответов мы не смогли подыскать кандидатов с релевантным опытом работы. Попробуйте еще раз!' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Найди себе в команду Frontend-разработчика</h2>\n        </div>\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}